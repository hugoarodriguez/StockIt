//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockIt_Logica.WSStockIt {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSStockIt.WebServiceSISoap")]
    public interface WebServiceSISoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int login(string correo, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/login", ReplyAction="*")]
        System.Threading.Tasks.Task<int> loginAsync(string correo, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertarUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertarUsuario(string usuario, string nombre, string apellido, string nombrEmpresa, string correo, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertarUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertarUsuarioAsync(string usuario, string nombre, string apellido, string nombrEmpresa, string correo, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizarPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int actualizarPassword(string correo, string passwordAntigua, string passwordNueva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizarPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<int> actualizarPasswordAsync(string correo, string passwordAntigua, string passwordNueva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/asignarPasswordTemporal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string asignarPasswordTemporal(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/asignarPasswordTemporal", ReplyAction="*")]
        System.Threading.Tasks.Task<string> asignarPasswordTemporalAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/seleccionarUsuarioByCorreo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet seleccionarUsuarioByCorreo(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/seleccionarUsuarioByCorreo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> seleccionarUsuarioByCorreoAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertarCategoria", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertarCategoria(int idUsuario, string nombreCategoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertarCategoria", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertarCategoriaAsync(int idUsuario, string nombreCategoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizarCategoria", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int actualizarCategoria(int idUsuario, int idCategoria, string nombreCategoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizarCategoria", ReplyAction="*")]
        System.Threading.Tasks.Task<int> actualizarCategoriaAsync(int idUsuario, int idCategoria, string nombreCategoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminarCategoria", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int eliminarCategoria(int idCategoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminarCategoria", ReplyAction="*")]
        System.Threading.Tasks.Task<int> eliminarCategoriaAsync(int idCategoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/seleccionarCategoriasByIdUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet seleccionarCategoriasByIdUsuario(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/seleccionarCategoriasByIdUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> seleccionarCategoriasByIdUsuarioAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/seleccionarCategoriasActivasByIdUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet seleccionarCategoriasActivasByIdUsuario(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/seleccionarCategoriasActivasByIdUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> seleccionarCategoriasActivasByIdUsuarioAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertarCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertarCliente(int idUsuario, string nombre, string apellido, string sexo, string telefono, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertarCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertarClienteAsync(int idUsuario, string nombre, string apellido, string sexo, string telefono, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizarCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int actualizarCliente(int idUsuario, int idCliente, string nombre, string apellido, string sexo, string telefono, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizarCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<int> actualizarClienteAsync(int idUsuario, int idCliente, string nombre, string apellido, string sexo, string telefono, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminarCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int eliminarCliente(int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminarCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<int> eliminarClienteAsync(int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/seleccionarClientesByIdUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet seleccionarClientesByIdUsuario(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/seleccionarClientesByIdUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> seleccionarClientesByIdUsuarioAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/seleccionarClientesActivosByIdUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet seleccionarClientesActivosByIdUsuario(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/seleccionarClientesActivosByIdUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> seleccionarClientesActivosByIdUsuarioAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertarProveedor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertarProveedor(int idUsuario, string nombre, string telefono, string direccion, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertarProveedor", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertarProveedorAsync(int idUsuario, string nombre, string telefono, string direccion, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizarProveedor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int actualizarProveedor(int idUsuario, int idProveedor, string nombre, string telefono, string direccion, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizarProveedor", ReplyAction="*")]
        System.Threading.Tasks.Task<int> actualizarProveedorAsync(int idUsuario, int idProveedor, string nombre, string telefono, string direccion, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminarProveedor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int eliminarProveedor(int idProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminarProveedor", ReplyAction="*")]
        System.Threading.Tasks.Task<int> eliminarProveedorAsync(int idProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/seleccionarProveedoresByIdUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet seleccionarProveedoresByIdUsuario(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/seleccionarProveedoresByIdUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> seleccionarProveedoresByIdUsuarioAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/seleccionarProveedoresActivosByIdUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet seleccionarProveedoresActivosByIdUsuario(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/seleccionarProveedoresActivosByIdUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> seleccionarProveedoresActivosByIdUsuarioAsync(int idUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceSISoapChannel : StockIt_Logica.WSStockIt.WebServiceSISoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceSISoapClient : System.ServiceModel.ClientBase<StockIt_Logica.WSStockIt.WebServiceSISoap>, StockIt_Logica.WSStockIt.WebServiceSISoap {
        
        public WebServiceSISoapClient() {
        }
        
        public WebServiceSISoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceSISoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSISoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSISoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public int login(string correo, string password) {
            return base.Channel.login(correo, password);
        }
        
        public System.Threading.Tasks.Task<int> loginAsync(string correo, string password) {
            return base.Channel.loginAsync(correo, password);
        }
        
        public int insertarUsuario(string usuario, string nombre, string apellido, string nombrEmpresa, string correo, string password) {
            return base.Channel.insertarUsuario(usuario, nombre, apellido, nombrEmpresa, correo, password);
        }
        
        public System.Threading.Tasks.Task<int> insertarUsuarioAsync(string usuario, string nombre, string apellido, string nombrEmpresa, string correo, string password) {
            return base.Channel.insertarUsuarioAsync(usuario, nombre, apellido, nombrEmpresa, correo, password);
        }
        
        public int actualizarPassword(string correo, string passwordAntigua, string passwordNueva) {
            return base.Channel.actualizarPassword(correo, passwordAntigua, passwordNueva);
        }
        
        public System.Threading.Tasks.Task<int> actualizarPasswordAsync(string correo, string passwordAntigua, string passwordNueva) {
            return base.Channel.actualizarPasswordAsync(correo, passwordAntigua, passwordNueva);
        }
        
        public string asignarPasswordTemporal(string correo) {
            return base.Channel.asignarPasswordTemporal(correo);
        }
        
        public System.Threading.Tasks.Task<string> asignarPasswordTemporalAsync(string correo) {
            return base.Channel.asignarPasswordTemporalAsync(correo);
        }
        
        public System.Data.DataSet seleccionarUsuarioByCorreo(string correo) {
            return base.Channel.seleccionarUsuarioByCorreo(correo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> seleccionarUsuarioByCorreoAsync(string correo) {
            return base.Channel.seleccionarUsuarioByCorreoAsync(correo);
        }
        
        public int insertarCategoria(int idUsuario, string nombreCategoria) {
            return base.Channel.insertarCategoria(idUsuario, nombreCategoria);
        }
        
        public System.Threading.Tasks.Task<int> insertarCategoriaAsync(int idUsuario, string nombreCategoria) {
            return base.Channel.insertarCategoriaAsync(idUsuario, nombreCategoria);
        }
        
        public int actualizarCategoria(int idUsuario, int idCategoria, string nombreCategoria) {
            return base.Channel.actualizarCategoria(idUsuario, idCategoria, nombreCategoria);
        }
        
        public System.Threading.Tasks.Task<int> actualizarCategoriaAsync(int idUsuario, int idCategoria, string nombreCategoria) {
            return base.Channel.actualizarCategoriaAsync(idUsuario, idCategoria, nombreCategoria);
        }
        
        public int eliminarCategoria(int idCategoria) {
            return base.Channel.eliminarCategoria(idCategoria);
        }
        
        public System.Threading.Tasks.Task<int> eliminarCategoriaAsync(int idCategoria) {
            return base.Channel.eliminarCategoriaAsync(idCategoria);
        }
        
        public System.Data.DataSet seleccionarCategoriasByIdUsuario(int idUsuario) {
            return base.Channel.seleccionarCategoriasByIdUsuario(idUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> seleccionarCategoriasByIdUsuarioAsync(int idUsuario) {
            return base.Channel.seleccionarCategoriasByIdUsuarioAsync(idUsuario);
        }
        
        public System.Data.DataSet seleccionarCategoriasActivasByIdUsuario(int idUsuario) {
            return base.Channel.seleccionarCategoriasActivasByIdUsuario(idUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> seleccionarCategoriasActivasByIdUsuarioAsync(int idUsuario) {
            return base.Channel.seleccionarCategoriasActivasByIdUsuarioAsync(idUsuario);
        }
        
        public int insertarCliente(int idUsuario, string nombre, string apellido, string sexo, string telefono, string correo) {
            return base.Channel.insertarCliente(idUsuario, nombre, apellido, sexo, telefono, correo);
        }
        
        public System.Threading.Tasks.Task<int> insertarClienteAsync(int idUsuario, string nombre, string apellido, string sexo, string telefono, string correo) {
            return base.Channel.insertarClienteAsync(idUsuario, nombre, apellido, sexo, telefono, correo);
        }
        
        public int actualizarCliente(int idUsuario, int idCliente, string nombre, string apellido, string sexo, string telefono, string correo) {
            return base.Channel.actualizarCliente(idUsuario, idCliente, nombre, apellido, sexo, telefono, correo);
        }
        
        public System.Threading.Tasks.Task<int> actualizarClienteAsync(int idUsuario, int idCliente, string nombre, string apellido, string sexo, string telefono, string correo) {
            return base.Channel.actualizarClienteAsync(idUsuario, idCliente, nombre, apellido, sexo, telefono, correo);
        }
        
        public int eliminarCliente(int idCliente) {
            return base.Channel.eliminarCliente(idCliente);
        }
        
        public System.Threading.Tasks.Task<int> eliminarClienteAsync(int idCliente) {
            return base.Channel.eliminarClienteAsync(idCliente);
        }
        
        public System.Data.DataSet seleccionarClientesByIdUsuario(int idUsuario) {
            return base.Channel.seleccionarClientesByIdUsuario(idUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> seleccionarClientesByIdUsuarioAsync(int idUsuario) {
            return base.Channel.seleccionarClientesByIdUsuarioAsync(idUsuario);
        }
        
        public System.Data.DataSet seleccionarClientesActivosByIdUsuario(int idUsuario) {
            return base.Channel.seleccionarClientesActivosByIdUsuario(idUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> seleccionarClientesActivosByIdUsuarioAsync(int idUsuario) {
            return base.Channel.seleccionarClientesActivosByIdUsuarioAsync(idUsuario);
        }
        
        public int insertarProveedor(int idUsuario, string nombre, string telefono, string direccion, string correo) {
            return base.Channel.insertarProveedor(idUsuario, nombre, telefono, direccion, correo);
        }
        
        public System.Threading.Tasks.Task<int> insertarProveedorAsync(int idUsuario, string nombre, string telefono, string direccion, string correo) {
            return base.Channel.insertarProveedorAsync(idUsuario, nombre, telefono, direccion, correo);
        }
        
        public int actualizarProveedor(int idUsuario, int idProveedor, string nombre, string telefono, string direccion, string correo) {
            return base.Channel.actualizarProveedor(idUsuario, idProveedor, nombre, telefono, direccion, correo);
        }
        
        public System.Threading.Tasks.Task<int> actualizarProveedorAsync(int idUsuario, int idProveedor, string nombre, string telefono, string direccion, string correo) {
            return base.Channel.actualizarProveedorAsync(idUsuario, idProveedor, nombre, telefono, direccion, correo);
        }
        
        public int eliminarProveedor(int idProveedor) {
            return base.Channel.eliminarProveedor(idProveedor);
        }
        
        public System.Threading.Tasks.Task<int> eliminarProveedorAsync(int idProveedor) {
            return base.Channel.eliminarProveedorAsync(idProveedor);
        }
        
        public System.Data.DataSet seleccionarProveedoresByIdUsuario(int idUsuario) {
            return base.Channel.seleccionarProveedoresByIdUsuario(idUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> seleccionarProveedoresByIdUsuarioAsync(int idUsuario) {
            return base.Channel.seleccionarProveedoresByIdUsuarioAsync(idUsuario);
        }
        
        public System.Data.DataSet seleccionarProveedoresActivosByIdUsuario(int idUsuario) {
            return base.Channel.seleccionarProveedoresActivosByIdUsuario(idUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> seleccionarProveedoresActivosByIdUsuarioAsync(int idUsuario) {
            return base.Channel.seleccionarProveedoresActivosByIdUsuarioAsync(idUsuario);
        }
    }
}
